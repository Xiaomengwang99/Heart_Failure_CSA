remotes::install_github("mlverse/chattr")
p1 = boxplot(cov_lst, beside = TRUE, names.arg = c("Cox", "Conformal"),
xlab = "Method", ylab = "Coverage", main = "Coverage Comparison")
library(ggplot2)
cov_lst = read.csv("July5_coverage.csv", header = TRUE)
setwd("~/Desktop/MT Survival/HF_Project")
library(ggplot2)
cov_lst = read.csv("July5_coverage.csv", header = TRUE)
cov_lst2 = read.csv("July5_coverage2.csv", header = TRUE)
cov_lst = rbind(cov_lst, cov_lst2)
cov_lst
colnames(cov_lst) = c("Cox", "Conformal")
df = read.csv("df_predicted_lbd.csv")
head(df)
p1 = boxplot(cov_lst, beside = TRUE, names.arg = c("Cox", "Conformal"),
xlab = "Method", ylab = "Coverage", main = "Coverage Comparison")
abline(h = 0.90, col = "red")
library(ggplot2)
df = read.csv("df_predicted_lbd.csv")
head(df)
boxplot(df$predicted_lbd ~ df$X.gender, main = "Predicted lower bound by sex", xlab = "Gender", ylab = "Predicted Lower Bound")
boxplot(df$predicted_lbd ~ df$X.gender, xlab = "Gender", ylab = "Predicted Lower Bound")
ggplot(df, aes(x = X.gender, y = predicted_lbd, fill = X.gender)) +
geom_boxplot(color = "darkblue", fill = "blue", alpha = 0.7) +
labs(
title = "Boxplot of Predicted Lower Bound by Gender",
x = "Gender",
y = "Predicted Lower Bound"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
boxplot(df$predicted_lbd ~ df$X.gender, xlab = "Gender", ylab = "Predicted Lower Bound", col = "blue")
ggplot(df, aes(x = X.gender, y = predicted_lbd, fill = X.gender)) +
geom_boxplot(color = "darkblue", fill = "blue", alpha = 0.7) +
labs(
title = "Boxplot of Predicted Lower Bound by Gender",
x = "Gender",
y = "Predicted Lower Bound"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
ggplot(df, aes(x = X.gender, y = predicted_lbd, fill = X.gender)) +
geom_boxplot(color = "darkblue", fill = "blue", alpha = 0.7) +
labs(
x = "Gender",
y = "Predicted Lower Bound"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
p1 <- ggplot(df, aes(x = X.gender, y = predicted_lbd, fill = X.gender)) +
geom_boxplot(color = "darkblue", fill = "blue", alpha = 0.7) +
labs(
x = "Gender",
y = "Predicted Lower Bound"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
ggsave("boxplot_predicted_lbd_by_gender.png", plot = p1, width = 8, height = 6)
boxplot(df$predicted_lbd ~ df$X.gender, xlab = "Gender", ylab = "Predicted Lower Bound", col = "blue")
boxplot(df$predicted_lbd ~ df$X.gender, xlab = "Gender", ylab = "Predicted Lower Bound", col = "blue")
boxplot(df$predicted_lbd ~ df$X.gender, xlab = "Gender", ylab = "Predicted Lower Bound", col = "lightblue")
boxplot(df$predicted_lbd ~ df$X.race, main = "Predicted lower bound by race", xlab = "Race", ylab = "Predicted Lower Bound")
boxplot(df$predicted_lbd ~ df$X.race, col = "lightblue", xlab = "Race", ylab = "Predicted Lower Bound")
boxplot(df$predicted_lbd ~ df$X.gender, xlab = "Gender", ylab = "Predicted Lower Bound", col = "lightblue")
boxplot(df$predicted_lbd ~ df$X.gender, xlab = "Gender", ylab = "Predicted Lower Bound (days)", col = "lightblue")
boxplot(df$predicted_lbd ~ df$X.race, col = "lightblue", xlab = "Race", ylab = "Predicted Lower Bound (days)")
df$age_group <- cut(df$X.anchor_age, breaks = c(0, 18, 25, 35, 45, 55,65,Inf),
labels = c("0-18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+"))
boxplot(df$predicted_lbd ~ df$age_group, main = "Predicted lower bound by age group", xlab = "Age group", ylab = "Predicted Lower Bound")
boxplot(df$predicted_lbd ~ df$age_group, col = "lightblue", xlab = "Age group", ylab = "Predicted Lower Bound (days)")
summary(df$X.gender)
df$X.gender
summary(df$X.race)
summary(as.factor(df$X.race))
library(shiny); runApp('HF_shiny.r')
runApp('HF_shiny.r')
runApp('HF_shiny.r')
runApp('HF_shiny.r')
runApp('HF_shiny.r')
runApp('HF_shiny.r')
runApp('HF_shiny.r')
runApp('HF_shiny.r')
library(shiny); runApp('HF_shiny.r')
library(shiny); runApp('HF_shiny.r')
library(shiny); runApp('HF_shiny.r')
